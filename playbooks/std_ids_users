---

- name: Configure userids the way I like
  become: true
  gather_facts: false
  hosts: '{{ HOSTS }}'

  tasks:

    # - name: Ensure 'jasmit' exists
    #   ansible.builtin.user:
    #     name: jasmit
    #     group: jeff
    #     comment: standard userid maintained by Ansible
    #     state: present
    #     shell: /bin/bash
    #     uid: 10001
    #     generate_ssh_key: true
    #     ssh_key_bits: 4096
    #     ssh_key_file: .ssh/{{ ansible_host }}_rsa

    - name: Ensure 'postgres' exists
      ansible.builtin.user:
        name: postgres
        group: postgres
        comment: standard userid maintained by Ansible
        state: present
        shell: /bin/bash
        uid: 30000
        generate_ssh_key: true
        ssh_key_bits: 4096
        ssh_key_file: .ssh/{{ ansible_host }}_rsa

    - name: Ensure 'jeff' exists
      ansible.builtin.user:
        name: jeff
        group: jeff
        comment: standard userid maintained by Ansible
        state: present
        shell: /bin/bash
        uid: 10000
        generate_ssh_key: true
        ssh_key_bits: 4096
        ssh_key_file: .ssh/{{ ansible_host }}_rsa

    - name: Ensure 'appowner' exists
      ansible.builtin.user:
        name: appowner
        group: appgroup
        comment: standard userid maintained by Ansible
        state: present
        shell: /bin/bash
        uid: 20001
        generate_ssh_key: true
        ssh_key_bits: 4096
        ssh_key_file: .ssh/{{ ansible_host }}_rsa

    - name: Ensure 'appuser' exists
      ansible.builtin.user:
        name: appuser
        group: appgroup
        comment: standard userid maintained by Ansible
        state: present
        shell: /bin/bash
        uid: 20002
        generate_ssh_key: true
        ssh_key_bits: 4096
        ssh_key_file: .ssh/{{ ansible_host }}_rsa


    #  Sample use:
    #  make PLAYBOOK=std_ids_users HOSTS=enki, run-on-hosts

...
