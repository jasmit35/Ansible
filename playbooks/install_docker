---

- name: InstallDocker
  become: true
  gather_facts: true
  hosts: '{{ HOSTS }}'

  tasks:

    - name: Update Apt Cache
      apt:
        update_cache: true

    - name: Remove posible conflicting legacy packages
      apt:
        name:
          - docker.io
          - docker-compose
          - docker-doc
          - podman-docker
        state: absent

    - name: Remove other possible leftovers
      shell: >
        sudo rm -rf /var/lib/docker
        sudo rm -rf /var/lib/containerd
      changed_when: false

    - name: Install Prerequisites
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
          - python3-debian
        state: present

    - name: Add Docker Module Repository
      ansible.builtin.deb822_repository:
        name: docker
        types: [deb]
        uris: "https://download.docker.com/linux/{{ ansible_distribution | lower }}"
        signed_by: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
        suites: ["{{ ansible_distribution_release | lower }}"]
        components: [stable]
        state: present
        enabled: true

    - name: Install Docker Community Edition
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: true

    - name: Start and enable Docker
      service:
        name: docker
        state: started

    - name: Create our standard Docker network
      community.docker.docker_network:
        name: pi_docker_network
        ipam_config:
          - subnet: 172.30.1.0/24


  #  Sample
  #  make PLAYBOOK=install_docker HOSTS=independence, run-on-hosts
...
